/*  Copyright 2022 EBRAINS AISBL
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0.
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  This open source software code was developed in part or in whole in the
*  Human Brain Project, funded from the European Union's Horizon 2020
*  Framework Programme for Research and Innovation under
*  Specific Grant Agreements No. 720270, No. 785907, and No. 945539
*  (Human Brain Project SGA1, SGA2 and SGA3).
*/
package eu.ebrains.kg.sdk;

import eu.ebrains.kg.sdk.response.*;
import eu.ebrains.kg.sdk.request.*;
import eu.ebrains.kg.sdk.communication.*;
import java.util.*;

import eu.ebrains.kg.sdk.utils.KGClientBuilder;
import eu.ebrains.kg.sdk.utils.KGConfig;
import eu.ebrains.kg.sdk.utils.Translator;
import java.util.function.Consumer;
import eu.ebrains.kg.sdk.communication.tokenHandler.TokenHandler;

/**
* The KG Client for the API version {{api_version}}
*
* ATTENTION! This class is autogenerated! Do not apply any manual changes!
*/
public class KG {

    public static Client createClient(String host, Stage stage, String idNamespace, TokenHandler tokenHandler, TokenHandler clientTokenHandler, boolean enableProfiling) {
        return new Client(KGConfig.buildConfig(host, stage, idNamespace, tokenHandler, clientTokenHandler, enableProfiling));
    }

    public static Admin createAdmin(String host, Stage stage, String idNamespace, TokenHandler tokenHandler, TokenHandler clientTokenHandler, boolean enableProfiling){
        return new Admin(KGConfig.buildConfig(host, stage, idNamespace, tokenHandler, clientTokenHandler, enableProfiling));
    }

    public static class Client {
        {% for category, methods in methods_by_category %}{% if category != 'admin' %}public final {{category.capitalize()}} {{category}};
        {% endif %}{% endfor %}
        private Client(KGConfig kgConfig) {
           {% for category, methods in methods_by_category %}{% if category != 'admin' %}this.{{category}} = new {{category.capitalize()}}(kgConfig);
            {% endif %}{% endfor %}
        }
    }

    {% for category, methods in methods_by_category %}
    public static class {{category.capitalize()}} extends Communication {
        private {{category.capitalize()}}(KGConfig config) {
            super(config);
        }
    {% for method in methods %}
        {% if method.summary %}/**
        * {{method.summary}}
        */{% endif %}
        public {{method.name[0] | capitalize}}{{method.name[1:]}}Builder {{method.name}}({% for param in method.required_parameters %}{{param.type}} {{param.name}}{% if not loop.last %}, {% endif %}{% endfor %}) {
            return new {{method.name[0] | capitalize}}{{method.name[1:]}}Builder({% for param in method.required_parameters %}{{param.name}}{% if not loop.last %}, {% endif %}{% endfor %});
        }

        public class {{method.name[0] | capitalize}}{{method.name[1:]}}Builder{

            private final Map<String, Object> params = new HashMap<>();{%for param in method.path_parameters %}
            private final {{param.type}} {{param.name}};{% endfor %}

            public {{method.name[0] | capitalize}}{{method.name[1:]}}Builder({% for param in method.required_parameters %}{{param.type}} {{param.name}}{% if not loop.last %}, {% endif %}{% endfor %}){{'{'}}{% for param in method.required_parameters %}
                {%if param.in == "path" %}this.{{param.name}} = {{param.name}};{% else %}this.params.put("{{param.name}}", {{param.name}});{% endif %}{% endfor %}{% for param in method.parameters %}{%if param.name == "stage"%}
                this.params.put("stage", getStage());{%elif param.in != "path" and param.default != None %}
                this.params.put("{{param.name}}", {{param.default}});{% endif %}{% endfor %}
            }

            public {% if method.response_type %}{{method.response_type}}{% else %}Optional<KGError>{% endif %} invoke({% if method.has_payload %}Map<String, Object> payload{% endif %}){
                String path = "{{method.path.name}}";{%for path_param in method.path_parameters %}
                path = path.replace("{{'{'}}{{path_param.name}}{{'}'}}", String.valueOf(this.{{path_param.name}}));{% endfor %}
                Optional<KGResponseWithRequest> result = {{method.operation}}(path, {% if method.has_payload %}payload, {%elif method.operation not in ['get', 'delete'] %}null, {% endif %}params);
                return {% if method.raw_response_type %}{{ method.raw_response_type}}.translate(result.orElse(null), {% if method.generic_response_type %}{{method.generic_response_type}}{% elif method.response_type %}{{method.response_type}}{% endif %}.class){% else %}result.isPresent() ? Translator.translateError(result.get()) : Optional.empty(){% endif %};
            }{% if method.raw_response_type == "ResultPage" %}

            public void iterate({% if method.has_payload %}Map<String, Object> payload, {% endif %}Consumer<? super {{method.generic_response_type}}> consumer, Consumer<KGError> errorConsumer) {
                //For iteration, we don't need total result information. The opt-out will speed up execution.
                returnTotalResults(false);
                ResultPage<{{method.generic_response_type}}> result = invoke({% if method.has_payload %}payload{% endif %});
                while(result!=null) {
                    if (result.isSuccessful()) {
                        if (!result.getData().isEmpty()) {
                            result.getData().forEach(consumer);
                            from(result.getFrom() + result.getSize());
                            result = invoke({% if method.has_payload %}payload{% endif %});
                        } else {
                            result = null;
                        }
                    } else {
                        errorConsumer.accept(result.getError());
                        break;
                    }
                }
            }{% endif %}
            {% for p in method.parameters %}
            {%if (not p.required or p.default) and p.name != "stage" %}public {{method.name[0] | capitalize}}{{method.name[1:]}}Builder {{p.name}}({%if not p.booleanTrueOnly%}{{p.type}} {{p.name}}{% endif %}){
                {%if p.booleanTrueOnly%}params.put("{{p.name}}", true);{% else %}params.put("{{p.name}}", {{p.name}});{% endif %}
                return this;
            }{% endif %}{% endfor %}
        }
    {% endfor %}
    }
    {% endfor %}


    public static KGClientBuilder kg(){
        return new KGClientBuilder();
    }
}